name: Build Frontend

on:
  workflow_dispatch:
  push:
    branches:
      - integration
    paths:
      - "frontend/**"
      - "!frontend/*.md"

env:
  DOCKER_IMAGE: ${{ secrets.FRONTEND_IMAGE }}
  DOCKER_TAG: ${{ github.run_number }}

jobs:
  Test:
    name: Test Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' 

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Install dependencies
        working-directory: frontend
        run: |
          npm install

      - name: Lint code
        working-directory: frontend
        run: |
          npm run lint | tee /dev/null

      - name: Build
        working-directory: frontend
        run: |
          npm run build
        
  Build:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: [Test]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Docker Build
        uses: docker/setup-buildx-action@v2

      - name: Build image
        working-directory: frontend
        run: |
          docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
          docker images
          docker save $DOCKER_IMAGE:$DOCKER_TAG | gzip > ${DOCKER_IMAGE//\//-}-$DOCKER_TAG.tar.gz
          echo "artifact_path=frontend/${DOCKER_IMAGE//\//-}-$DOCKER_TAG.tar.gz" >> $GITHUB_ENV

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-image
          path: ${{ env.artifact_path }}
          retention-days: 1

  Scan:
    name: Trivy Scan
    needs: [Build]
    runs-on: ubuntu-latest
    
    steps:
      - name: Download Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-image

      - name: Debug - List files after download
        run: ls -lah

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Load Docker Image
        run: |
            gunzip -f ./${DOCKER_IMAGE//\//-}-$DOCKER_TAG.tar.gz
            docker load < ./${DOCKER_IMAGE//\//-}-$DOCKER_TAG.tar

      - name: Run Trivy Scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ secrets.FRONTEND_IMAGE }}:${{ github.run_number }}
          severity: HIGH,CRITICAL
          exit-code: 1
          format: json
          output: './trivy.json'
        continue-on-error: true

      - name: Upload Trivy Results as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-frontend
          path: './trivy.json'