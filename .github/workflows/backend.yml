name: Build Backend

on:
  workflow_dispatch:

  push:
    branches:
      - integration
    paths:
      - "backend/**"
      - "!backend/*.md"

env:
  DOCKER_IMAGE: ${{ secrets.BACKEND_IMAGE }}
  DOCKER_TAG: ${{ github.run_number }}

jobs:
#   Test:
#     name: Build Backend
#     runs-on: ubuntu-latest

#     services:
#       db:
#         image: postgres:13
#         env:
#           POSTGRES_USER: app
#           POSTGRES_PASSWORD: changethis123
#           POSTGRES_DB: app
#           POSTGRES_HOST: localhost
#         ports:
#           - 5432:5432

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Setup Python env
#         uses: actions/setup-python@v4
#         with:
#           python-version: "3.12"
    
#       - name: Install Poetry
#         working-directory: backend
#         run: |
#           curl -sSL https://install.python-poetry.org | python3 -
#           poetry install

#       - name: Start Application
#         working-directory: backend
#         run: |
#           poetry run python ./prestart.py

#       - name: Run Application Tests
#         working-directory: backend
#         run: |
#           poetry run pytest | tee /dev/null


  Build:
    name: Docker Build
    runs-on: ubuntu-latest
    # needs: [Test]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Docker Build
        uses: docker/setup-buildx-action@v2

      - name: Build image
        working-directory: backend
        run: |
          docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
          docker images
          docker save $DOCKER_IMAGE:$DOCKER_TAG | gzip > ${DOCKER_IMAGE//\//-}-$DOCKER_TAG.tar.gz
          echo "artifact_path=backend/${DOCKER_IMAGE//\//-}-$DOCKER_TAG.tar.gz" >> $GITHUB_ENV

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-image
          path: ${{ env.artifact_path }}
          

#   Scan:
#     name: Trivy Scan
#     needs: [Build]
#     runs-on: ubuntu-latest
    
#     steps:
#       - name: Download Image Artifact
#         uses: actions/download-artifact@v3
#         with:
#           name: backend-image

#       - name: Debug - List files after download
#         run: ls -lah

#       - name: Set up Docker
#         uses: docker/setup-buildx-action@v2

#       - name: Load Docker Image
#         run: |
#             gunzip -f ./${GITHUB_REPOSITORY//\//-}-$DOCKER_TAG.tar.gz
#             docker load < ./${GITHUB_REPOSITORY//\//-}-$DOCKER_TAG.tar

#       - name: Run Trivy Scan
#         uses: aquasecurity/trivy-action@0.28.0
#         with:
#             image-ref: $DOCKER_IMAGE:$DOCKER_TAG
#             severity: HIGH,CRITICAL
#             exit-code: 1
#         continue-on-error: false






  






