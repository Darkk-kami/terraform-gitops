name: Deploy Frontend

permissions:
  contents: write

concurrency:
  group: push-${{ github.ref }}

on:
  workflow_dispatch:

  push:
    branches:
      - deployment
    paths:
      - "frontend/**"
      - "!frontend/*.md"

jobs:
  Build-Push:
    name: Build Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Pull Latest Changes
        run: |
          git pull origin ${{ github.ref_name }}

      - name: Setup Docker Build
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image
        uses: docker/build-push-action@v6
        with: 
          context: "{{defaultContext}}:frontend"
          push: true
          tags: ${{ secrets.FRONTEND_IMAGE }}:1.${{ github.run_number }}

  Tag:
    name: Update Frontend Tags
    needs: [Build-Push]
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Update Tag
        run: |
          sed -i '/frontend:/,/image:/ s|image: .*|image: ${{ secrets.FRONTEND_IMAGE }}:1.${{ github.run_number }}|' docker-compose.yaml

      - name: Commit Changes
        run: |
          BRANCH_NAME=${{ github.ref_name }}
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "$${{ github.actor }}@noreply.github.com"
          git add docker-compose.yaml
          git commit -m "Update Docker Image Tag to ${{ secrets.FRONTEND_IMAGE }}:1.${{ github.run_number }}"
          git pull --rebase origin $BRANCH_NAME
          git push origin $BRANCH_NAME

  Deploy:
    name: Deploy and Trigger Ansible
    needs: [Tag]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Recreate Docker PEM File
        run: |
          echo "${{ secrets.ANSIBLE_KEY }}" | base64 --decode > docker.pem
          ls -l docker.pem
          chmod 600 docker.pem
          ssh -o StrictHostKeyChecking=no -i docker.pem ubuntu@${{ secrets.ANSIBLE_IP }} "echo hi"
          
      - name: Copy Files to Remote Server
        run: |
          scp -o StrictHostKeyChecking=no -i docker.pem docker-compose.yaml ubuntu@${{ secrets.ANSIBLE_IP }}:~/ansible/dependencies/
      - name: Run Ansible Playbook
        run: |
          ssh -o StrictHostKeyChecking=no -i docker.pem ubuntu@${{ secrets.ANSIBLE_IP }} << EOF
            cd ~/ansible
            ansible-playbook -i inventory.ini deploy.yaml
          EOF  

